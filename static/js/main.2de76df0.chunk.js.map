{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","memo","todos","map","username","getUser","userId","usersFromServer","find","todosWithUsers","App","useState","todoTitle","setTodoTitle","selectedUserId","setSelectedUserId","isTitleValid","setIsTitleValid","isUserSelected","setIsUserSelected","setTodos","largestTodoId","useMemo","Math","max","handleFieldChange","setFormField","newValue","setValidityField","oldValidityValue","action","method","onSubmit","event","preventDefault","newTodo","type","placeholder","value","onChange","input","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2de76df0.chunk.js","sourcesContent":["import { FC } from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC, memo } from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: FC<Props> = memo(({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n});\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import {\n  FC,\n  ChangeEvent,\n  FormEvent,\n  useMemo,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from 'react';\n\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => {\n    return user.id === userId;\n  });\n\n  return foundUser || null;\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n  const [todos, setTodos] = useState(todosWithUsers);\n\n  const largestTodoId = useMemo(() => {\n    return Math.max(...todos.map(todo => todo.id));\n  }, [todos]);\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>): void {\n    event.preventDefault();\n\n    if (!todoTitle || !selectedUserId) {\n      setIsTitleValid(!!todoTitle);\n      setIsUserSelected(!!selectedUserId);\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: largestTodoId + 1,\n      title: todoTitle,\n      userId: selectedUserId,\n      completed: false,\n      user: getUser(selectedUserId),\n    };\n\n    setTodos([\n      ...todos,\n      newTodo,\n    ]);\n    setTodoTitle('');\n    setSelectedUserId(0);\n  }\n\n  function handleFieldChange<T>(\n    setFormField: Dispatch<SetStateAction<T>>,\n    newValue: T,\n    setValidityField: Dispatch<SetStateAction<boolean>>,\n    oldValidityValue: boolean,\n  ): void {\n    setFormField(newValue);\n\n    if (!oldValidityValue) {\n      setValidityField(true);\n    }\n  }\n\n  function handleTitleChange(event: ChangeEvent<HTMLInputElement>): void {\n    const input = event\n      .target\n      .value\n      .replace(/[^a-z\\p{sc=Cyrillic} \\d]/giu, '');\n\n    handleFieldChange(setTodoTitle, input, setIsTitleValid, isTitleValid);\n  }\n\n  function handleSelectChange(event: ChangeEvent<HTMLSelectElement>): void {\n    const newValue = +event.target.value;\n\n    handleFieldChange(\n      setSelectedUserId,\n      newValue,\n      setIsUserSelected,\n      isUserSelected,\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            name=\"todoTitle\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTitleChange}\n          />\n\n          {!isTitleValid\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              name=\"selectedUserId\"\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSelectChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {!isUserSelected\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}